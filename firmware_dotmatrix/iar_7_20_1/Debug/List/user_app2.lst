###############################################################################
#
# IAR ANSI C/C++ Compiler V8.32.2.178/W32 for ARM         03/Feb/2019  22:55:02
# Copyright 1999-2018 IAR Systems AB.
#
#    Cpu mode     =  
#    Endian       =  little
#    Source file  =  
#        C:\Users\Caleb\Documents\firmware\eie_iot_game_fw\firmware_common\application\user_app2.c
#    Command line =  
#        -f C:\Users\Caleb\AppData\Local\Temp\EWFEA8.tmp
#        (C:\Users\Caleb\Documents\firmware\eie_iot_game_fw\firmware_common\application\user_app2.c
#        -D MPGL2 -D MPG2 --preprocess=c
#        C:\Users\Caleb\Documents\firmware\eie_iot_game_fw\firmware_dotmatrix\iar_7_20_1\Debug\List
#        -lC
#        C:\Users\Caleb\Documents\firmware\eie_iot_game_fw\firmware_dotmatrix\iar_7_20_1\Debug\List
#        -o
#        C:\Users\Caleb\Documents\firmware\eie_iot_game_fw\firmware_dotmatrix\iar_7_20_1\Debug\Obj
#        --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa
#        --no_clustering --no_scheduling --debug --endian=little
#        --cpu=Cortex-M3 -e --fpu=None --dlib_config "C:\Program Files
#        (x86)\IAR Systems\Embedded Workbench
#        8.2\arm\inc\c\DLib_Config_Normal.h" -I
#        C:\Users\Caleb\Documents\firmware\eie_iot_game_fw\firmware_dotmatrix\iar_7_20_1\
#        -I
#        C:\Users\Caleb\Documents\firmware\eie_iot_game_fw\firmware_dotmatrix\iar_7_20_1\..\bsp\
#        -I
#        C:\Users\Caleb\Documents\firmware\eie_iot_game_fw\firmware_dotmatrix\iar_7_20_1\..\drivers\
#        -I
#        C:\Users\Caleb\Documents\firmware\eie_iot_game_fw\firmware_dotmatrix\iar_7_20_1\..\application\
#        -I
#        C:\Users\Caleb\Documents\firmware\eie_iot_game_fw\firmware_dotmatrix\iar_7_20_1\..\libraries\captouch\
#        -I
#        C:\Users\Caleb\Documents\firmware\eie_iot_game_fw\firmware_dotmatrix\iar_7_20_1\..\..\firmware_common\
#        -I
#        C:\Users\Caleb\Documents\firmware\eie_iot_game_fw\firmware_dotmatrix\iar_7_20_1\..\..\firmware_common\application\
#        -I
#        C:\Users\Caleb\Documents\firmware\eie_iot_game_fw\firmware_dotmatrix\iar_7_20_1\..\..\firmware_common\cmsis\
#        -I
#        C:\Users\Caleb\Documents\firmware\eie_iot_game_fw\firmware_dotmatrix\iar_7_20_1\..\..\firmware_common\drivers\
#        -On --use_c++_inline --require_prototypes -I "C:\Program Files
#        (x86)\IAR Systems\Embedded Workbench 8.2\arm\CMSIS\Core\Include\" -I
#        "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        8.2\arm\CMSIS\DSP\Include\")
#    Locale       =  C
#    List file    =  
#        C:\Users\Caleb\Documents\firmware\eie_iot_game_fw\firmware_dotmatrix\iar_7_20_1\Debug\List\user_app2.lst
#    Object file  =  
#        C:\Users\Caleb\Documents\firmware\eie_iot_game_fw\firmware_dotmatrix\iar_7_20_1\Debug\Obj\user_app2.o
#
###############################################################################

C:\Users\Caleb\Documents\firmware\eie_iot_game_fw\firmware_common\application\user_app2.c
      1          /**********************************************************************************************************************
      2          File: user_app2.c                                                                
      3          
      4          Description:
      5          This is a user_app2.c file template 
      6          
      7          ------------------------------------------------------------------------------------------------------------------------
      8          API:
      9          
     10          Public functions:
     11          
     12          
     13          Protected System functions:
     14          void UserApp2Initialize(void)
     15          Runs required initialzation for the task.  Should only be called once in main init section.
     16          
     17          void UserApp2RunActiveState(void)
     18          Runs current task state.  Should only be called once in main loop.
     19          
     20          
     21          **********************************************************************************************************************/
     22          
     23          #include "configuration.h"
     24          
     25          /***********************************************************************************************************************
     26          Global variable definitions with scope across entire project.
     27          All Global variable names shall start with "G_UserApp2"
     28          ***********************************************************************************************************************/
     29          /* New variables */

   \                                 In section .bss, align 4
     30          volatile u32 G_u32UserApp2Flags;                       /* Global state flags */
   \                     G_u32UserApp2Flags:
   \        0x0                      DS8 4
     31          
     32          
     33          /*--------------------------------------------------------------------------------------------------------------------*/
     34          /* Existing variables (defined in other files -- should all contain the "extern" keyword) */
     35          extern volatile u32 G_u32SystemFlags;                  /* From main.c */
     36          extern volatile u32 G_u32ApplicationFlags;             /* From main.c */
     37          
     38          extern volatile u32 G_u32SystemTime1ms;                /* From board-specific source file */
     39          extern volatile u32 G_u32SystemTime1s;                 /* From board-specific source file */
     40          
     41          
     42          /***********************************************************************************************************************
     43          Global variable definitions with scope limited to this local application.
     44          Variable names shall start with "UserApp2_" and be declared as static.
     45          ***********************************************************************************************************************/

   \                                 In section .bss, align 4
     46          static fnCode_type UserApp2_StateMachine;            /* The state machine function pointer */
   \                     UserApp2_StateMachine:
   \        0x0                      DS8 4
     47          //static u32 UserApp2_u32Timeout;                      /* Timeout counter used across states */
     48          

   \                                 In section .data, align 1
     49          u8 UserApp2_NumPlayers = 1;
   \                     UserApp2_NumPlayers:
   \        0x0   0x01               DC8 1

   \                                 In section .bss, align 4
     50          u8 UserApp2_Scores[4] = {0, 0, 0, 0};
   \                     UserApp2_Scores:
   \        0x0                      DS8 4

   \                                 In section .data, align 1
     51          u8 UserApp2_CurrentPlayer = 1;
   \                     UserApp2_CurrentPlayer:
   \        0x0   0x01               DC8 1

   \                                 In section .bss, align 1
     52          u8 UserApp2_CurrentMessage = 0;
   \                     UserApp2_CurrentMessage:
   \        0x0                      DS8 1
     53          

   \                                 In section .bss, align 4
     54          PixelAddressType UserApp2_HeaderLocation;
   \                     UserApp2_HeaderLocation:
   \        0x0                      DS8 4

   \                                 In section .bss, align 4
     55          PixelAddressType UserApp2_P1Location;
   \                     UserApp2_P1Location:
   \        0x0                      DS8 4

   \                                 In section .bss, align 4
     56          PixelAddressType UserApp2_P2Location;
   \                     UserApp2_P2Location:
   \        0x0                      DS8 4

   \                                 In section .bss, align 4
     57          PixelAddressType UserApp2_P3Location;
   \                     UserApp2_P3Location:
   \        0x0                      DS8 4

   \                                 In section .bss, align 4
     58          PixelAddressType UserApp2_P4Location;
   \                     UserApp2_P4Location:
   \        0x0                      DS8 4

   \                                 In section .bss, align 4
     59          PixelAddressType UserApp2_MesLocation;
   \                     UserApp2_MesLocation:
   \        0x0                      DS8 4
     60          

   \                                 In section .data, align 4
     61          u8 UserApp2_Score_string[] = "Scores";
   \                     UserApp2_Score_string:
   \        0x0   0x53 0x63          DC8 "Scores"
   \              0x6F 0x72    
   \              0x65 0x73    
   \              0x00         
   \        0x7   0x00               DC8 0

   \                                 In section .data, align 4
     62          u8 UserApp2_P1Score_string[] = "*P1 0 ";
   \                     UserApp2_P1Score_string:
   \        0x0   0x2A 0x50          DC8 "*P1 0 "
   \              0x31 0x20    
   \              0x30 0x20    
   \              0x00         
   \        0x7   0x00               DC8 0

   \                                 In section .data, align 4
     63          u8 UserApp2_P2Score_string[] = " P2 0 ";
   \                     UserApp2_P2Score_string:
   \        0x0   0x20 0x50          DC8 " P2 0 "
   \              0x32 0x20    
   \              0x30 0x20    
   \              0x00         
   \        0x7   0x00               DC8 0

   \                                 In section .data, align 4
     64          u8 UserApp2_P3Score_string[] = " P3 0 ";
   \                     UserApp2_P3Score_string:
   \        0x0   0x20 0x50          DC8 " P3 0 "
   \              0x33 0x20    
   \              0x30 0x20    
   \              0x00         
   \        0x7   0x00               DC8 0

   \                                 In section .data, align 4
     65          u8 UserApp2_P4Score_string[] = " P4 0 ";
   \                     UserApp2_P4Score_string:
   \        0x0   0x20 0x50          DC8 " P4 0 "
   \              0x34 0x20    
   \              0x30 0x20    
   \              0x00         
   \        0x7   0x00               DC8 0

   \                                 In section .data, align 4
     66          u8 *UserApp2_Messages[] = {"", "Waiting...", "Error"};
   \                     UserApp2_Messages:
   \        0x0   0x....'....        DC32 ?_0, ?_1, ?_2
   \              0x....'....  
   \              0x....'....  
     67          
     68          
     69          /**********************************************************************************************************************
     70          Function Definitions
     71          **********************************************************************************************************************/
     72          
     73          /*--------------------------------------------------------------------------------------------------------------------*/
     74          /* Public functions                                                                                                   */
     75          /*--------------------------------------------------------------------------------------------------------------------*/
     76          
     77          // Takes in a player number as 1, 2, 3, 4 (this can be changed to fit the rest
     78          // of the codebase

   \                                 In section .text, align 2, keep-with-next
     79          void SetScore(int player, int score) {
     80            UserApp2_Scores[player - 1] = score;
   \                     SetScore: (+1)
   \        0x0   0x....             LDR.N    R2,??DataTable8
   \        0x2   0x4402             ADD      R2,R2,R0
   \        0x4   0xF802 0x1C01      STRB     R1,[R2, #-1]
     81          }
   \        0x8   0x4770             BX       LR               ;; return
     82          

   \                                 In section .text, align 2, keep-with-next
     83          void SetNumberOfPlayers(u8 players) {
     84            UserApp2_NumPlayers = players;
   \                     SetNumberOfPlayers: (+1)
   \        0x0   0x....             LDR.N    R1,??DataTable8_1
   \        0x2   0x7008             STRB     R0,[R1, #+0]
     85          }
   \        0x4   0x4770             BX       LR               ;; return
     86          

   \                                 In section .text, align 2, keep-with-next
     87          void SetCurrentPlayer(u8 player) {
     88            UserApp2_CurrentPlayer = player;
   \                     SetCurrentPlayer: (+1)
   \        0x0   0x....             LDR.N    R1,??DataTable8_2
   \        0x2   0x7008             STRB     R0,[R1, #+0]
     89          }
   \        0x4   0x4770             BX       LR               ;; return
     90          
     91          // Make sure to only pass static strings into the message box

   \                                 In section .text, align 2, keep-with-next
     92          void SetMessage(u8 message) {
     93            UserApp2_CurrentMessage = message;
   \                     SetMessage: (+1)
   \        0x0   0x....             LDR.N    R1,??DataTable8_3
   \        0x2   0x7008             STRB     R0,[R1, #+0]
     94          }
   \        0x4   0x4770             BX       LR               ;; return
     95          

   \                                 In section .text, align 2, keep-with-next
     96          void ClearMessage(void) {
   \                     ClearMessage: (+1)
   \        0x0   0xB580             PUSH     {R7,LR}
     97            SetMessage(0);
   \        0x2   0x2000             MOVS     R0,#+0
   \        0x4   0x....'....        BL       SetMessage
     98          }
   \        0x8   0xBD01             POP      {R0,PC}          ;; return
     99          
    100          /*--------------------------------------------------------------------------------------------------------------------*/
    101          /* Protected functions                                                                                                */
    102          /*--------------------------------------------------------------------------------------------------------------------*/
    103          
    104          /*--------------------------------------------------------------------------------------------------------------------
    105          Function: UserApp2Initialize
    106          
    107          Description:
    108          Initializes the State Machine and its variables.
    109          
    110          Requires:
    111            -
    112          
    113          Promises:
    114            - 
    115          */

   \                                 In section .text, align 2, keep-with-next
    116          void UserApp2Initialize(void)
    117          {
   \                     UserApp2Initialize: (+1)
   \        0x0   0xB4F0             PUSH     {R4-R7}
    118            u16 left_column, right_column;
    119            /* If good initialization, set state to Idle */
    120            if( 1 )
    121            {
    122              // Place the Score text on the right hand side of the screen
    123              left_column = LCD_CENTER_COLUMN + (LCD_SMALL_FONT_COLUMNS + LCD_SMALL_FONT_SPACE) / 2;
   \        0x2   0x2043             MOVS     R0,#+67
    124              right_column = left_column + (LCD_SMALL_FONT_COLUMNS + LCD_SMALL_FONT_SPACE) * 3;
   \        0x4   0xF110 0x0112      ADDS     R1,R0,#+18
    125              
    126              UserApp2_HeaderLocation.u16PixelColumnAddress = left_column+ (LCD_SMALL_FONT_COLUMNS + LCD_SMALL_FONT_SPACE);
   \        0x8   0x....             LDR.N    R2,??DataTable8_4
   \        0xA   0x1D83             ADDS     R3,R0,#+6
   \        0xC   0x8053             STRH     R3,[R2, #+2]
    127              UserApp2_P1Location.u16PixelColumnAddress = left_column;
   \        0xE   0x....             LDR.N    R3,??DataTable8_5
   \       0x10   0x8058             STRH     R0,[R3, #+2]
    128              UserApp2_P2Location.u16PixelColumnAddress = right_column;
   \       0x12   0x....             LDR.N    R4,??DataTable8_6
   \       0x14   0x8061             STRH     R1,[R4, #+2]
    129              UserApp2_P3Location.u16PixelColumnAddress = left_column;
   \       0x16   0x....             LDR.N    R5,??DataTable8_7
   \       0x18   0x8068             STRH     R0,[R5, #+2]
    130              UserApp2_P4Location.u16PixelColumnAddress = right_column;
   \       0x1A   0x....             LDR.N    R6,??DataTable8_8
   \       0x1C   0x8071             STRH     R1,[R6, #+2]
    131              UserApp2_MesLocation.u16PixelColumnAddress = left_column;
   \       0x1E   0x....             LDR.N    R7,??DataTable8_9
   \       0x20   0x8078             STRH     R0,[R7, #+2]
    132              
    133              UserApp2_HeaderLocation.u16PixelRowAddress = LCD_SMALL_FONT_LINE0;
   \       0x22   0xF05F 0x0C00      MOVS     R12,#+0
   \       0x26   0xF8A2 0xC000      STRH     R12,[R2, #+0]
    134              UserApp2_P1Location.u16PixelRowAddress = LCD_SMALL_FONT_LINE2;
   \       0x2A   0x2210             MOVS     R2,#+16
   \       0x2C   0x801A             STRH     R2,[R3, #+0]
    135              UserApp2_P2Location.u16PixelRowAddress = LCD_SMALL_FONT_LINE3;
   \       0x2E   0x2218             MOVS     R2,#+24
   \       0x30   0x8022             STRH     R2,[R4, #+0]
    136              UserApp2_P3Location.u16PixelRowAddress = LCD_SMALL_FONT_LINE4;
   \       0x32   0x2220             MOVS     R2,#+32
   \       0x34   0x802A             STRH     R2,[R5, #+0]
    137              UserApp2_P4Location.u16PixelRowAddress = LCD_SMALL_FONT_LINE5;
   \       0x36   0x2228             MOVS     R2,#+40
   \       0x38   0x8032             STRH     R2,[R6, #+0]
    138              UserApp2_MesLocation.u16PixelRowAddress = LCD_SMALL_FONT_LINE7;
   \       0x3A   0x2238             MOVS     R2,#+56
   \       0x3C   0x803A             STRH     R2,[R7, #+0]
    139              
    140              UserApp2_StateMachine = UserApp2SM_Idle;
   \       0x3E   0x....'....        ADR.W    R2,UserApp2SM_Idle
   \       0x42   0x....             LDR.N    R3,??DataTable8_10
   \       0x44   0x601A             STR      R2,[R3, #+0]
    141            }
    142            else
    143            {
    144              /* The task isn't properly initialized, so shut it down and don't run */
    145              UserApp2_StateMachine = UserApp2SM_FailedInit;
    146            }
    147          
    148          } /* end UserApp2Initialize() */
   \       0x46   0xBCF0             POP      {R4-R7}
   \       0x48   0x4770             BX       LR               ;; return
    149          
    150            
    151          /*----------------------------------------------------------------------------------------------------------------------
    152          Function UserApp2RunActiveState()
    153          
    154          Description:
    155          Selects and runs one iteration of the current state in the state machine.
    156          All state machines have a TOTAL of 1ms to execute, so on average n state machines
    157          may take 1ms / n to execute.
    158          
    159          Requires:
    160            - State machine function pointer points at current state
    161          
    162          Promises:
    163            - Calls the function to pointed by the state machine function pointer
    164          */

   \                                 In section .text, align 2, keep-with-next
    165          void UserApp2RunActiveState(void)
    166          {
   \                     UserApp2RunActiveState: (+1)
   \        0x0   0xB580             PUSH     {R7,LR}
    167            UserApp2_StateMachine();
   \        0x2   0x....             LDR.N    R0,??DataTable8_10
   \        0x4   0x6800             LDR      R0,[R0, #+0]
   \        0x6   0x4780             BLX      R0
    168          
    169          } /* end UserApp2RunActiveState */
   \        0x8   0xBD01             POP      {R0,PC}          ;; return
    170          
    171          
    172          /*--------------------------------------------------------------------------------------------------------------------*/
    173          /* Private functions                                                                                                  */
    174          /*--------------------------------------------------------------------------------------------------------------------*/

   \                                 In section .text, align 2, keep-with-next
    175          void SetScoreString(u8 player) {
   \                     SetScoreString: (+1)
   \        0x0   0xB430             PUSH     {R4,R5}
    176            u8 *scoreString;
    177            u8 score;
    178            switch (player) {
   \        0x2   0x0002             MOVS     R2,R0
   \        0x4   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \        0x6   0x2A01             CMP      R2,#+1
   \        0x8   0xD006             BEQ.N    ??SetScoreString_0
   \        0xA   0xD310             BCC.N    ??SetScoreString_1
   \        0xC   0x2A03             CMP      R2,#+3
   \        0xE   0xD009             BEQ.N    ??SetScoreString_2
   \       0x10   0xD305             BCC.N    ??SetScoreString_3
   \       0x12   0x2A04             CMP      R2,#+4
   \       0x14   0xD009             BEQ.N    ??SetScoreString_4
   \       0x16   0xE00A             B.N      ??SetScoreString_1
    179              case 1:
    180                scoreString = UserApp2_P1Score_string;
   \                     ??SetScoreString_0: (+1)
   \       0x18   0x....             LDR.N    R2,??DataTable8_11
   \       0x1A   0x0011             MOVS     R1,R2
    181                break;
   \       0x1C   0xE007             B.N      ??SetScoreString_1
    182              case 2:
    183                scoreString = UserApp2_P2Score_string;
   \                     ??SetScoreString_3: (+1)
   \       0x1E   0x....             LDR.N    R2,??DataTable8_12
   \       0x20   0x0011             MOVS     R1,R2
    184                break;
   \       0x22   0xE004             B.N      ??SetScoreString_1
    185              case 3:
    186                scoreString = UserApp2_P3Score_string;
   \                     ??SetScoreString_2: (+1)
   \       0x24   0x....             LDR.N    R2,??DataTable8_13
   \       0x26   0x0011             MOVS     R1,R2
    187                break;
   \       0x28   0xE001             B.N      ??SetScoreString_1
    188              case 4:
    189                scoreString = UserApp2_P4Score_string;
   \                     ??SetScoreString_4: (+1)
   \       0x2A   0x....             LDR.N    R2,??DataTable8_14
   \       0x2C   0x0011             MOVS     R1,R2
    190                break;
    191            }
    192            
    193            score = UserApp2_Scores[player - 1];
   \                     ??SetScoreString_1: (+1)
   \       0x2E   0x....             LDR.N    R2,??DataTable8
   \       0x30   0x0003             MOVS     R3,R0
   \       0x32   0xB2DB             UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
   \       0x34   0x441A             ADD      R2,R2,R3
   \       0x36   0xF812 0x2C01      LDRB     R2,[R2, #-1]
    194            if (score > 9) {
   \       0x3A   0x0013             MOVS     R3,R2
   \       0x3C   0xB2DB             UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
   \       0x3E   0x2B0A             CMP      R3,#+10
   \       0x40   0xDB10             BLT.N    ??SetScoreString_5
    195              scoreString[5] = (score / 10) + 48;
   \       0x42   0x0013             MOVS     R3,R2
   \       0x44   0xB2DB             UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
   \       0x46   0x240A             MOVS     R4,#+10
   \       0x48   0xFB93 0xF3F4      SDIV     R3,R3,R4
   \       0x4C   0x3330             ADDS     R3,R3,#+48
   \       0x4E   0x714B             STRB     R3,[R1, #+5]
    196              scoreString[4] = (score % 10) + 48;
   \       0x50   0x0013             MOVS     R3,R2
   \       0x52   0xB2DB             UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
   \       0x54   0x240A             MOVS     R4,#+10
   \       0x56   0xFB93 0xF5F4      SDIV     R5,R3,R4
   \       0x5A   0xFB04 0x3315      MLS      R3,R4,R5,R3
   \       0x5E   0x3330             ADDS     R3,R3,#+48
   \       0x60   0x710B             STRB     R3,[R1, #+4]
   \       0x62   0xE002             B.N      ??SetScoreString_6
    197            }
    198            else {
    199              scoreString[4] = score + 48;
   \                     ??SetScoreString_5: (+1)
   \       0x64   0xF112 0x0330      ADDS     R3,R2,#+48
   \       0x68   0x710B             STRB     R3,[R1, #+4]
    200            }
    201          }
   \                     ??SetScoreString_6: (+1)
   \       0x6A   0xBC30             POP      {R4,R5}
   \       0x6C   0x4770             BX       LR               ;; return
    202          

   \                                 In section .text, align 2, keep-with-next
    203          void MarkCurrentPlayer(void) {
   \                     MarkCurrentPlayer: (+1)
   \        0x0   0xB410             PUSH     {R4}
    204            // Reset all turn indicators
    205            UserApp2_P1Score_string[0] = ' ';
   \        0x2   0x....             LDR.N    R0,??DataTable8_11
   \        0x4   0x2120             MOVS     R1,#+32
   \        0x6   0x7001             STRB     R1,[R0, #+0]
    206            UserApp2_P2Score_string[0] = ' ';
   \        0x8   0x....             LDR.N    R1,??DataTable8_12
   \        0xA   0x2220             MOVS     R2,#+32
   \        0xC   0x700A             STRB     R2,[R1, #+0]
    207            UserApp2_P3Score_string[0] = ' ';
   \        0xE   0x....             LDR.N    R2,??DataTable8_13
   \       0x10   0x2320             MOVS     R3,#+32
   \       0x12   0x7013             STRB     R3,[R2, #+0]
    208            UserApp2_P4Score_string[0] = ' ';
   \       0x14   0x....             LDR.N    R3,??DataTable8_14
   \       0x16   0x2420             MOVS     R4,#+32
   \       0x18   0x701C             STRB     R4,[R3, #+0]
    209            
    210            // Switch the current players turn
    211            switch (UserApp2_CurrentPlayer) {
   \       0x1A   0x....             LDR.N    R4,??DataTable8_2
   \       0x1C   0x7824             LDRB     R4,[R4, #+0]
   \       0x1E   0x2C01             CMP      R4,#+1
   \       0x20   0xD006             BEQ.N    ??MarkCurrentPlayer_0
   \       0x22   0xD310             BCC.N    ??MarkCurrentPlayer_1
   \       0x24   0x2C03             CMP      R4,#+3
   \       0x26   0xD009             BEQ.N    ??MarkCurrentPlayer_2
   \       0x28   0xD305             BCC.N    ??MarkCurrentPlayer_3
   \       0x2A   0x2C04             CMP      R4,#+4
   \       0x2C   0xD009             BEQ.N    ??MarkCurrentPlayer_4
   \       0x2E   0xE00A             B.N      ??MarkCurrentPlayer_1
    212              case 1:
    213                UserApp2_P1Score_string[0] = '*';
   \                     ??MarkCurrentPlayer_0: (+1)
   \       0x30   0x212A             MOVS     R1,#+42
   \       0x32   0x7001             STRB     R1,[R0, #+0]
    214                break;
   \       0x34   0xE007             B.N      ??MarkCurrentPlayer_1
    215              case 2:
    216                UserApp2_P2Score_string[0] = '*';
   \                     ??MarkCurrentPlayer_3: (+1)
   \       0x36   0x202A             MOVS     R0,#+42
   \       0x38   0x7008             STRB     R0,[R1, #+0]
    217                break;
   \       0x3A   0xE004             B.N      ??MarkCurrentPlayer_1
    218              case 3:
    219                UserApp2_P3Score_string[0] = '*';
   \                     ??MarkCurrentPlayer_2: (+1)
   \       0x3C   0x202A             MOVS     R0,#+42
   \       0x3E   0x7010             STRB     R0,[R2, #+0]
    220                break;
   \       0x40   0xE001             B.N      ??MarkCurrentPlayer_1
    221              case 4:
    222                UserApp2_P4Score_string[0] = '*';
   \                     ??MarkCurrentPlayer_4: (+1)
   \       0x42   0x202A             MOVS     R0,#+42
   \       0x44   0x7018             STRB     R0,[R3, #+0]
    223                break;
    224            }
    225          }
   \                     ??MarkCurrentPlayer_1: (+1)
   \       0x46   0xBC10             POP      {R4}
   \       0x48   0x4770             BX       LR               ;; return
    226          
    227          /**********************************************************************************************************************
    228          State Machine Function Definitions
    229          **********************************************************************************************************************/
    230          
    231          /*-------------------------------------------------------------------------------------------------------------------*/
    232          /* Wait for ??? */

   \                                 In section .text, align 4, keep-with-next
    233          static void UserApp2SM_Idle(void)
    234          {
   \                     UserApp2SM_Idle: (+1)
   \        0x0   0xB510             PUSH     {R4,LR}
    235            SetScoreString(1);
   \        0x2   0x2001             MOVS     R0,#+1
   \        0x4   0x....'....        BL       SetScoreString
    236            SetScoreString(2);
   \        0x8   0x2002             MOVS     R0,#+2
   \        0xA   0x....'....        BL       SetScoreString
    237            SetScoreString(3);
   \        0xE   0x2003             MOVS     R0,#+3
   \       0x10   0x....'....        BL       SetScoreString
    238            SetScoreString(4);
   \       0x14   0x2004             MOVS     R0,#+4
   \       0x16   0x....'....        BL       SetScoreString
    239            
    240            MarkCurrentPlayer();
   \       0x1A   0x....'....        BL       MarkCurrentPlayer
    241            
    242            LcdLoadString(UserApp2_Score_string, LCD_FONT_SMALL, &UserApp2_HeaderLocation);
   \       0x1E   0x....             LDR.N    R2,??DataTable8_4
   \       0x20   0x2100             MOVS     R1,#+0
   \       0x22   0x....             LDR.N    R0,??DataTable8_15
   \       0x24   0x....'....        BL       LcdLoadString
    243            
    244            // One player, I imagine this will be like a waiting screen
    245            if (UserApp2_NumPlayers > 0)
   \       0x28   0x....             LDR.N    R4,??DataTable8_1
   \       0x2A   0x7820             LDRB     R0,[R4, #+0]
   \       0x2C   0x2800             CMP      R0,#+0
   \       0x2E   0xD004             BEQ.N    ??UserApp2SM_Idle_0
    246              LcdLoadString(UserApp2_P1Score_string, LCD_FONT_SMALL, &UserApp2_P1Location);
   \       0x30   0x....             LDR.N    R2,??DataTable8_5
   \       0x32   0x2100             MOVS     R1,#+0
   \       0x34   0x....             LDR.N    R0,??DataTable8_11
   \       0x36   0x....'....        BL       LcdLoadString
    247            if (UserApp2_NumPlayers > 1)
   \                     ??UserApp2SM_Idle_0: (+1)
   \       0x3A   0x7820             LDRB     R0,[R4, #+0]
   \       0x3C   0x2802             CMP      R0,#+2
   \       0x3E   0xDB04             BLT.N    ??UserApp2SM_Idle_1
    248              LcdLoadString(UserApp2_P2Score_string, LCD_FONT_SMALL, &UserApp2_P2Location);
   \       0x40   0x....             LDR.N    R2,??DataTable8_6
   \       0x42   0x2100             MOVS     R1,#+0
   \       0x44   0x....             LDR.N    R0,??DataTable8_12
   \       0x46   0x....'....        BL       LcdLoadString
    249            if (UserApp2_NumPlayers > 2)
   \                     ??UserApp2SM_Idle_1: (+1)
   \       0x4A   0x7820             LDRB     R0,[R4, #+0]
   \       0x4C   0x2803             CMP      R0,#+3
   \       0x4E   0xDB04             BLT.N    ??UserApp2SM_Idle_2
    250              LcdLoadString(UserApp2_P3Score_string, LCD_FONT_SMALL, &UserApp2_P3Location);
   \       0x50   0x....             LDR.N    R2,??DataTable8_7
   \       0x52   0x2100             MOVS     R1,#+0
   \       0x54   0x....             LDR.N    R0,??DataTable8_13
   \       0x56   0x....'....        BL       LcdLoadString
    251            if (UserApp2_NumPlayers > 3)
   \                     ??UserApp2SM_Idle_2: (+1)
   \       0x5A   0x7820             LDRB     R0,[R4, #+0]
   \       0x5C   0x2804             CMP      R0,#+4
   \       0x5E   0xDB04             BLT.N    ??UserApp2SM_Idle_3
    252              LcdLoadString(UserApp2_P4Score_string, LCD_FONT_SMALL, &UserApp2_P4Location);
   \       0x60   0x....             LDR.N    R2,??DataTable8_8
   \       0x62   0x2100             MOVS     R1,#+0
   \       0x64   0x....             LDR.N    R0,??DataTable8_14
   \       0x66   0x....'....        BL       LcdLoadString
    253            
    254            // Render the message
    255            LcdLoadString(UserApp2_Messages[UserApp2_CurrentMessage], LCD_FONT_SMALL, &UserApp2_MesLocation);
   \                     ??UserApp2SM_Idle_3: (+1)
   \       0x6A   0x....             LDR.N    R2,??DataTable8_9
   \       0x6C   0x2100             MOVS     R1,#+0
   \       0x6E   0x....             LDR.N    R0,??DataTable8_16
   \       0x70   0x....             LDR.N    R3,??DataTable8_3
   \       0x72   0x781B             LDRB     R3,[R3, #+0]
   \       0x74   0xF850 0x0023      LDR      R0,[R0, R3, LSL #+2]
   \       0x78   0x....'....        BL       LcdLoadString
    256          } /* end UserApp2SM_Idle() */
   \       0x7C   0xBD10             POP      {R4,PC}          ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8:
   \        0x0   0x....'....        DC32     UserApp2_Scores

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_1:
   \        0x0   0x....'....        DC32     UserApp2_NumPlayers

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_2:
   \        0x0   0x....'....        DC32     UserApp2_CurrentPlayer

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_3:
   \        0x0   0x....'....        DC32     UserApp2_CurrentMessage

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_4:
   \        0x0   0x....'....        DC32     UserApp2_HeaderLocation

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_5:
   \        0x0   0x....'....        DC32     UserApp2_P1Location

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_6:
   \        0x0   0x....'....        DC32     UserApp2_P2Location

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_7:
   \        0x0   0x....'....        DC32     UserApp2_P3Location

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_8:
   \        0x0   0x....'....        DC32     UserApp2_P4Location

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_9:
   \        0x0   0x....'....        DC32     UserApp2_MesLocation

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_10:
   \        0x0   0x....'....        DC32     UserApp2_StateMachine

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_11:
   \        0x0   0x....'....        DC32     UserApp2_P1Score_string

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_12:
   \        0x0   0x....'....        DC32     UserApp2_P2Score_string

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_13:
   \        0x0   0x....'....        DC32     UserApp2_P3Score_string

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_14:
   \        0x0   0x....'....        DC32     UserApp2_P4Score_string

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_15:
   \        0x0   0x....'....        DC32     UserApp2_Score_string

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_16:
   \        0x0   0x....'....        DC32     UserApp2_Messages

   \                                 In section .rodata, align 1
   \                     ?_0:
   \        0x0   0x00               DC8 ""

   \                                 In section .rodata, align 4
   \                     ?_1:
   \        0x0   0x57 0x61          DC8 "Waiting..."
   \              0x69 0x74    
   \              0x69 0x6E    
   \              0x67 0x2E    
   \              0x2E 0x2E    
   \              0x00         
   \        0xB   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_2:
   \        0x0   0x45 0x72          DC8 "Error"
   \              0x72 0x6F    
   \              0x72 0x00    
   \        0x6   0x00 0x00          DC8 0, 0
    257               
    258          #if 0
    259          /*-------------------------------------------------------------------------------------------------------------------*/
    260          /* Handle an error */
    261          static void UserApp2SM_Error(void)          
    262          {
    263            
    264          } /* end UserApp2SM_Error() */
    265          #endif
    266          
    267          
    268          /*-------------------------------------------------------------------------------------------------------------------*/
    269          /* State to sit in if init failed */
    270          static void UserApp2SM_FailedInit(void)          
    271          {
    272              
    273          } /* end UserApp2SM_FailedInit() */
    274          
    275          
    276          /*--------------------------------------------------------------------------------------------------------------------*/
    277          /* End of File                                                                                                        */
    278          /*--------------------------------------------------------------------------------------------------------------------*/

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       8   ClearMessage
         8   -> SetMessage
       4   MarkCurrentPlayer
       0   SetCurrentPlayer
       0   SetMessage
       0   SetNumberOfPlayers
       0   SetScore
       8   SetScoreString
      16   UserApp2Initialize
       8   UserApp2RunActiveState
         8   -- Indirect call
       8   UserApp2SM_Idle
         8   -> LcdLoadString
         8   -> MarkCurrentPlayer
         8   -> SetScoreString


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable8
       4  ??DataTable8_1
       4  ??DataTable8_10
       4  ??DataTable8_11
       4  ??DataTable8_12
       4  ??DataTable8_13
       4  ??DataTable8_14
       4  ??DataTable8_15
       4  ??DataTable8_16
       4  ??DataTable8_2
       4  ??DataTable8_3
       4  ??DataTable8_4
       4  ??DataTable8_5
       4  ??DataTable8_6
       4  ??DataTable8_7
       4  ??DataTable8_8
       4  ??DataTable8_9
       1  ?_0
      12  ?_1
       8  ?_2
      10  ClearMessage
       4  G_u32UserApp2Flags
      74  MarkCurrentPlayer
       6  SetCurrentPlayer
       6  SetMessage
       6  SetNumberOfPlayers
      10  SetScore
     110  SetScoreString
      74  UserApp2Initialize
      10  UserApp2RunActiveState
     126  UserApp2SM_Idle
       1  UserApp2_CurrentMessage
       1  UserApp2_CurrentPlayer
       4  UserApp2_HeaderLocation
       4  UserApp2_MesLocation
      12  UserApp2_Messages
       1  UserApp2_NumPlayers
       4  UserApp2_P1Location
       8  UserApp2_P1Score_string
       4  UserApp2_P2Location
       8  UserApp2_P2Score_string
       4  UserApp2_P3Location
       8  UserApp2_P3Score_string
       4  UserApp2_P4Location
       8  UserApp2_P4Score_string
       8  UserApp2_Score_string
       4  UserApp2_Scores
       4  UserApp2_StateMachine

 
  37 bytes in section .bss
  54 bytes in section .data
  21 bytes in section .rodata
 500 bytes in section .text
 
 500 bytes of CODE  memory
  21 bytes of CONST memory
  91 bytes of DATA  memory

Errors: none
Warnings: none
